sh mkdir WORK
define_design_lib WORK -path ./WORK
analyze -library WORK -format verilog {fifo.v}
elaborate fifo -architecture verilog -library WORK

#Read the design in
#read_file -format verilog {"fifo.v"} 

#set the current design
current_design fifo 


#Link the design
link 

uniquify -reference {fifo.v}

#create clockand constrain the design 
create_clock "clk_in" -period 8 -name  "clk_in"
create_clock "clk_out" -period 14 -name  "clk_out"

set_input_delay -clock clk_in  -max -rise 0.4 "dataIn"
set_input_delay -clock clk_in  -min -rise 0.2 "dataIn"
set_input_delay -clock clk_in  -max -rise 0.4 "insert"
set_input_delay -clock clk_in  -min -rise 0.2 "insert"
set_input_delay -clock clk_out  -max -rise 0.4 "remove"
set_input_delay -clock clk_out  -min -rise 0.2 "remove"
set_output_delay -clock clk_in  -max -rise 0.4 "full"
set_output_delay -clock clk_in  -min -rise 0.2 "full"
set_output_delay -clock clk_out  -max -rise 0.4 "dataOut"
set_output_delay -clock clk_out  -min -rise 0.2 "dataOut"
set_output_delay -clock clk_out  -max -rise 0.4 "empty"
set_output_delay -clock clk_out  -min -rise 0.2 "empty"

set_dont_touch_network  "clk_in"
set_dont_touch_network  "clk_out" 

set_false_path -from [get_clocks {clk_in}] -to [get_clocks {clk_out}]
set_false_path -from [get_clocks {clk_out}] -to [get_clocks {clk_in}]

set_max_area 0
#Set operating conditions
#set_operating_conditions -library "saed90nm_typ" "TYPICAL"
#Synthesize and generate report
compile  -map_effort high -boundary_optimization 
report_attribute >  Synth_report1
report_area >  Synth_report2
report_constraints -all_violators > Synth_report3
report_timing -path full -delay max -max_paths 1 -nworst 1  > Synth_report4
report_power > Synth_report5